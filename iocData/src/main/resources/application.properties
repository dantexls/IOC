#默认服务器发布端口
server.port=8081
spring.aop.proxy-target-class=true
#页面默认前缀目录
spring.mvc.view.prefix=/WEB-INF/jsp/
#响应页面默认后缀
spring.mvc.view.suffix=.jsp
# 数据库访问配置
# 主数据源，默认的
#spring.datasource.druid.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.url=jdbc:mysql://49.4.5.118:30012/city_ioc?useSSL=false
spring.datasource.druid.username=root
spring.datasource.druid.password=123456

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.druid.initial-size=5
spring.datasource.druid.minIdle=5
spring.datasource.druid.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.druid.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.minEvictableIdleTimeMillis=300000
spring.datasource.druid.validationQuery=SELECT 1 FROM DUAL
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnBorrow=false
spring.datasource.druid.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.poolPreparedStatements=true
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.druid.useGlobalDataSourceStat=true

spring.hibernate.show_sql=true
spring.hibernate.format-sql=true
spring.hibernate.use_sql_comments=true
spring.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.hibernate.jdbc.fetch_size=50
spring.hibernate.jdbc.batch_size=30
spring.hibernate.use_outer_join=true
spring.hibernate.cache.use_query_cache=false
spring.hibernate.cache.use_second_level_cache=false
#4.1
spring.hibernate.query.factory_class=org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
#3.x
#hibernate.query.factory_class=org.hibernate.hql.classic.ClassicQueryTranslatorFactory

spring.hibernate.packages-to-scan=com.iss.cityioc.scs.entity
sessionTime=2000